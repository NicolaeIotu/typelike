/* typelike is Copyright (C) 2020-2021 Nicolae Iotu, nicolae.g.iotu@gmail.com
Licensed under SPDX Apache-2.0, http://www.apache.org/licenses/LICENSE-2.0 */
"use strict";const hasOwnProperty=Object.prototype.hasOwnProperty;function xtypeof(o){return Object.prototype.toString.call(o).slice(8,-1).toLowerCase()}function iterationType(o){switch(xtypeof(o)){case"object":return 4;case"array":return 3;case"map":return 2;case"set":return 1;default:return 0}}const templateSettings={maxDepth:0,properties:{allowMissing:!1,allowNull:!1}};let typelikeSettings=templateSettings,rtDepth=0;const resetOptions=function(){typelikeSettings=templateSettings,rtDepth=0};function compare(o,t){const ito=iterationType(o);if(ito!==iterationType(t))return!1;if(0!==ito){if(0!==typelikeSettings.maxDepth&&(rtDepth++,rtDepth>typelikeSettings.maxDepth))return!0;if(ito>=3){const oSize=Object.keys(o).length,tSize=Object.keys(t).length;if(!typelikeSettings.properties.allowMissing){if(0===oSize)return oSize===tSize;if(oSize!==tSize)return!1}for(const k in o)if(hasOwnProperty.call(t,k+"")){if(!compare(o[k],t[k]))return!1}else if(!typelikeSettings.properties.allowMissing)return!1}else{const oSize=o.size,tSize=t.size;if(!typelikeSettings.properties.allowMissing){if(0===oSize)return oSize===tSize;if(oSize!==tSize)return!1}const oKeysIterator=o.keys(),tKeysIterator=t.keys();if(1===ito){for(let i=0;i<oSize;i++)if(!compare(oKeysIterator.next().value,tKeysIterator.next().value))return!1}else{const oValuesIterator=o.values(),tValuesIterator=t.values();for(let i=0;i<oSize;i++){if(oKeysIterator.next().value!==tKeysIterator.next().value)return!1;if(!compare(oValuesIterator.next().value,tValuesIterator.next().value))return console.log(111),!1}}}return 0!==typelikeSettings.maxDepth&&rtDepth--,!0}return xtypeof(o)===xtypeof(t)||typelikeSettings.properties.allowNull&&"null"===xtypeof(o)}module.exports.typelike=function(obj,templates){const lastIndex=arguments.length-1;if(lastIndex<1)throw new Error("At least two parameters required.");let result=!1;for(let i=1;i<=lastIndex;i++)result=result||compare(obj,arguments[i]);return resetOptions(),result},module.exports.typelikeCustom=function(obj,templates,settings){const lastIndex=arguments.length-1;if(lastIndex<2)throw new Error("At least three parameters required.");return typelikeSettings=arguments[lastIndex],module.exports.typelike.apply(null,Array.from(arguments).filter((function(e,i){return i!==lastIndex})))};